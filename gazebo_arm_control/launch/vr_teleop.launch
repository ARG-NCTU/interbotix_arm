<launch>
	<!-- with this node gazebo arm will get the data from VR side-->
	<arg name="use_sim" default="true"/>
	<arg name="robot_name" default="wx200"/>
	<arg name="initial" default="true" />
	<arg name="debug" default="false"/>

	<node name="vr_teleop" pkg="gazebo_arm_control" type="vrarm.py" output="screen">
		<param name="robot_name" type="string" value="$(arg robot_name)"/>
		<param name="use_sim" value="$(arg use_sim)"/>
		<param name="initial" value="$(arg initial)"/>
	</node>

	<!-- with this launch file and node you can use set_ee_pose python command to move end-effector pose -->
	<include file="$(find interbotix_xsarm_control)/launch/xsarm_control_gazebo.launch">
		<arg name="robot_model" value="$(arg robot_name)"/>
		<arg name="use_sim" value="$(arg use_sim)"/>

	</include>
	<node name="gazebo_sdk_bridge" pkg="gazebo_arm_control" type="set_ee_pose.py" output="screen">
		<param name="robot_name" type="string" value="$(arg robot_name)"/>
		<param name="use_sim" value="$(arg use_sim)"/>
		<param name="keyboard_control" value="$(arg debug)"/>
	</node>

	<group if="$(arg use_sim)">
		<node name="endeffector_fix" pkg="gazebo_arm_control" type="endeffector_rotate_fix.py">
			<remap from="joint_states" to="$(arg robot_name)/joint_states"/>
			<remap from="joint_states_fix" to="$(arg robot_name)/joint_states_fix"/>
		</node>
	</group>

</launch>